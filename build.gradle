buildscript {
    ext {
        dependencyManagementPluginVersion = '1.0.7.RELEASE'
    }

    repositories {
        maven { url "https://maven.aliyun.com/repository/public" }
        maven { url "https://maven.aliyun.com/repository/gradle-plugin" }
        maven { url "https://maven.aliyun.com/repository/jcenter" }
        maven { url "https://maven.aliyun.com/repository/spring" }
        maven { url "https://maven.aliyun.com/repository/spring-plugin" }
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("io.spring.gradle:dependency-management-plugin:${dependencyManagementPluginVersion}")
        classpath 'io.github.swagger2markup:swagger2markup-gradle-plugin:1.3.3'
        classpath 'io.github.swagger2markup:swagger2markup-spring-restdocs-ext:1.3.3'
        classpath group: 'org.asciidoctor', name: 'asciidoctor-gradle-plugin', version: '1.5.7'
        classpath group: 'org.asciidoctor', name: 'asciidoctorj-pdf', version: '1.5.0-alpha.10.1'
        classpath 'com.netflix.nebula:gradle-aggregate-javadocs-plugin:2.2.+'
    }

}

plugins {
    id "io.franzbecker.gradle-lombok" version "3.1.0"
    id 'org.asciidoctor.convert' version '2.2.0'
}

apply plugin: 'nebula-aggregate-javadocs'

allprojects {
    apply plugin: 'java'
    apply plugin: 'checkstyle'
    apply plugin: "idea"
    apply plugin: 'groovy'

    repositories {
        mavenLocal()
        maven { url "https://maven.aliyun.com/repository/public" }
        maven { url "https://maven.aliyun.com/repository/gradle-plugin" }
        maven { url "https://maven.aliyun.com/repository/jcenter" }
        maven { url "https://maven.aliyun.com/repository/spring" }
        maven { url "https://maven.aliyun.com/repository/spring-plugin" }
    }

    group 'com.hy'
    version "${projectVersion}"

    sourceCompatibility = 1.8

    tasks.withType(JavaCompile) {
        sourceCompatibility = "1.8"
        targetCompatibility = "1.8"
        options.deprecation = true
        options.encoding = 'UTF-8'
        options.compilerArgs << "-Xlint:unchecked"
    }

    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
        options.addStringOption('charset', 'UTF-8')
    }

}

subprojects {
    apply plugin: "io.spring.dependency-management"
    apply plugin: "io.franzbecker.gradle-lombok"

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:2.1.4.RELEASE")
        }
        dependencies{
            //spring
            dependency group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.1.5.RELEASE'
            dependency group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.1.5.RELEASE'
            dependency group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.1.5.RELEASE'
            dependency group: 'org.aspectj', name: 'aspectjweaver', version: '1.9.4'


            //db
            dependency group: 'org.liquibase', name: 'liquibase-core', version: '3.6.3'
            dependency group: 'com.microsoft.sqlserver', name: 'mssql-jdbc', version: '6.5.4.jre8-preview'
            dependency group: 'mysql', name: 'mysql-connector-java', version: '8.0.16'
            dependency group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '2.0.1'

            //log
            dependency group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'

            //util
            dependency group: 'org.modelmapper', name: 'modelmapper', version: '2.3.4'

            //swagger
            dependency group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
            dependency group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
            dependency group: 'io.springfox', name: 'springfox-bean-validators', version: '2.9.2'

            //test
            dependency group: 'com.h2database', name: 'h2', version: '1.4.199'
            dependency group: 'junit', name: 'junit', version: '4.12'

            //templates
            dependency group: 'org.thymeleaf', name: 'thymeleaf', version: '3.0.11.RELEASE'


        }
    }

    dependencies {
        //spring
        compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'

        //db
        compile group: 'com.microsoft.sqlserver', name: 'mssql-jdbc'
        compile group: 'mysql', name: 'mysql-connector-java'
        compile group: 'org.liquibase', name: 'liquibase-core'

        //log
        compile group: 'ch.qos.logback', name: 'logback-core'

        //util
        compile group: 'org.modelmapper', name: 'modelmapper'

        //swagger
        compile group: 'io.springfox', name: 'springfox-swagger2'
        compile group: 'io.springfox', name: 'springfox-swagger-ui'
        compile group: 'io.springfox', name: 'springfox-bean-validators'


        //--------------------------------------test library------------------------------------------------//
        testCompile group: 'junit', name: 'junit'
        testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
        testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc'
        //testdb
        testCompile group: 'com.h2database', name: 'h2'

    }

    task initDir {
        doLast{
            sourceSets*.java.srcDirs*.each { it.mkdirs() }
            sourceSets*.resources.srcDirs*.each { it.mkdirs() }
        }
    }

    sourceSets {
        main.java.srcDirs = ['src/main/java']
        main.resources.srcDirs = ['src/main/resources', 'src/main/java']
    }

}
